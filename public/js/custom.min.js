/**
 * Resize function without multiple trigger
 * 
 * Usage:
 * $(window).smartresize(function(){  
 *     // code here
 * });
 */
(function($,sr){
    // debouncing function from John Hann
    // http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/
    var debounce = function (func, threshold, execAsap) {
      var timeout;

        return function debounced () {
            var obj = this, args = arguments;
            function delayed () {
                if (!execAsap)
                    func.apply(obj, args); 
                timeout = null; 
            }

            if (timeout)
                clearTimeout(timeout);
            else if (execAsap)
                func.apply(obj, args);

            timeout = setTimeout(delayed, threshold || 100); 
        };
    };

    // smartresize 
    jQuery.fn[sr] = function(fn){  return fn ? this.bind('resize', debounce(fn)) : this.trigger(sr); };

})(jQuery,'smartresize');

var $BODY = $('body'),
    $MENU_TOGGLE = $('#menu_toggle'),
    $SIDEBAR_MENU = $('#sidebar-menu')


// toggle small or large menu 
$MENU_TOGGLE.on('click', function() {
    if ($BODY.hasClass('nav-md')) {
        $SIDEBAR_MENU.find('li.active ul').hide();
        $SIDEBAR_MENU.find('li.active').addClass('active-sm').removeClass('active');
    } else {
        $SIDEBAR_MENU.find('li.active-sm ul').show();
        $SIDEBAR_MENU.find('li.active-sm').addClass('active').removeClass('active-sm');
    }
    $BODY.toggleClass('nav-md nav-sm');
});

// 导航
$SIDEBAR_MENU.find('a').on('click', function(ev) {
    var $li = $(this).parent();
    if ($li.is('.active')) {
        $li.removeClass('active');
        $('ul:first', $li).slideUp();
    } else {
        // prevent closing menu if we are on child menu
        if (!$li.parent().is('.child_menu')) {
            $SIDEBAR_MENU.find('li').removeClass('active');
            $SIDEBAR_MENU.find('li ul').slideUp();
        }
        $li.siblings().removeClass('active');
        $li.addClass('active');
        $('ul:first', $li).slideDown();
    }
});
// 用户信息 新增/编辑的模态框
$('.right_col .getUserModal').click(function(){
    var isCreate=$(this).attr("data-action")==0
    var footer=getUserFooter(isCreate)
    var el='#userModal'
    var title=isCreate?'新建用户信息':'编辑用户信息'
    if(isCreate){
        var body=userBody('','','','','','','',isCreate)
        showTips(el,title, body,footer)
    }else{
        var obj =JSON.parse($(this).attr("data-obj"))
        console.log(isCreate+'123')
        var body=userBody(obj.Author,obj.Name,obj.typeName,obj.BookPhoto,obj.Price,obj.Quantity,obj.Describe,obj.PublishCompany,isCreate)
        showTips(el,title, body,footer)
    }
    //上传图片
    $(el+' .uploadFile').change(function(){
        var that= $(this);
        var file = that.get(0).files[0];
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onloadend = function () {
            that.parent().prev().find('img').attr("src", reader.result);
        }
    })
})
// user body
function userBody(Author,Name,typeName,BookPhoto,Price,Quantity,Describe,PublishCompany,flag){
    console.log(flag)
    var body=`<form class="form-horizontal" id="userDialog">
        <div class="form-group">
            <label class="col-sm-2 control-label">作者</label>
            <div class="col-sm-10">
            <input type="text" class="form-control" name="Author" value="${Author}">
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">图书类型</label>
            <div class="col-sm-10">
            <input type="text" class="form-control" name="type" value="${typeName}" ${isDisabled(flag)}>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">图书名称</label>
            <div class="col-sm-10">
            <input type="text" class="form-control" name="Name" value="${Name}">
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">图书照片</label>
            <div class="col-sm-10">
                <div class="thumbnail" style="width: 200px; height: 150px;">
                    <img src="${BookPhoto}" alt="" style="width:100%;height:100%;"/>
                </div>
                <button type="button" class="btn btn-default uploadFileBox">
                    <span class="glyphicon glyphicon-question-sign"></span>选择图片
                    <input type="file" accept="image/*" class="uploadFile" name="BookPhoto" value=""/>
                </button>
                <span>请选择1M以内图片</span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">图书数量</label>
            <div class="col-sm-10">
            <input type="text" maxlength="6" onkeypress="return event.keyCode>=48&&event.keyCode<=57" name="Quantity" class="form-control" value="${Quantity}">
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">图书价格</label>
            <div class="col-sm-10">
            <input type="text" class="form-control" name="Price" value="${Price}" onkeyup="clearNoNum(this)">
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">图书描述</label>
            <div class="col-sm-10">
            <input type="text" class="form-control" name="Describe" value="${Describe}">
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">出版社</label>
            <div class="col-sm-10">
            <input type="text" class="form-control" name="PublishCompany" value="${PublishCompany}">
            </div>
        </div>
    </form>`
    return body;
}
function clearNoNum(obj){
    obj.value = obj.value.replace(/[^\d.]/g,""); //清除"数字"和"."以外的字符
    obj.value = obj.value.replace(/^\./g,""); //验证第一个字符是数字而不是字符          
    obj.value = obj.value.replace(/\.{2,}/g,"."); //只保留第一个.清除多余的       
    obj.value = obj.value.replace(".","$#$").replace(/\./g,"").replace("$#$",".");
    obj.value = obj.value.replace(/^(\-)*(\d+)\.(\d\d).*$/,'$1$2.$3'); //只能输入两个小数
}
// user footer
function getUserFooter(flag){
    return `<div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
        <button type="button" class="btn btn-primary" onclick="${flag?'addUsers()':'editUsers()'}">保存</button>
    </div>`
}
// 新增用户信息
function addUsers(){
    console.log('add')
    
    console.log($('#userDialog').serialize())
    console.log(arrayToJson($('#userDialog').serializeArray()))
}
// 编辑用户信息
function editUsers(){
    console.log('edit')
}
// 判断信息填写完毕
function isCorrectParams(obj){

}
function isDisabled(flag){
    console.log(flag)
    return flag?'':'disabled';
}
// json数组转对象
function arrayToJson(array){
    console.log(array)
    var json={}
    $.each(array, function (item) {
        json[item.name]=item.value
    })
    return json
}
// 弹窗的内容加载
function showTips(el,title, body,footer) {
    showModalOpen(el);
    $(el+' .modal-title').text(title);
    $(el+' .modal-body').html(body);
    $(el+' .modal-body').nextAll().remove();
    $(el+' .modal-body').after(footer);
}
// 公用开启和关闭
function showModalOpen(str){
    $(str).modal('show');
}
function showModalHide(str){
    $(str).modal('hide');
}